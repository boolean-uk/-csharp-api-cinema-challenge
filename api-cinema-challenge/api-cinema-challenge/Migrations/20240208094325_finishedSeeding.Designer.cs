// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using api_cinema_challenge.Data;

#nullable disable

namespace api_cinema_challenge.Migrations
{
    [DbContext(typeof(CinemaContext))]
    [Migration("20240208094325_finishedSeeding")]
    partial class finishedSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("api_cinema_challenge.Models.DatabaseModels.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("customer_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<DateTime>("UpdateddAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2015, 7, 1, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Kate Trump@yahoo.com",
                            Name = "Kate Trump",
                            Phone = "90430101",
                            UpdateddAt = new DateTime(2015, 7, 1, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 1, 7, 23, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Donald Jagger@msn.com",
                            Name = "Donald Jagger",
                            Phone = "34905742",
                            UpdateddAt = new DateTime(2022, 1, 7, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2009, 1, 21, 23, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Mick Winslet@outlook.com",
                            Name = "Mick Winslet",
                            Phone = "22572129",
                            UpdateddAt = new DateTime(2009, 1, 21, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2021, 11, 4, 23, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Elvis Hepburn@msn.com",
                            Name = "Elvis Hepburn",
                            Phone = "60999338",
                            UpdateddAt = new DateTime(2021, 11, 4, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2008, 5, 11, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Elvis Presley@yahoo.com",
                            Name = "Elvis Presley",
                            Phone = "85949451",
                            UpdateddAt = new DateTime(2008, 5, 11, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2012, 5, 19, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Kate Hepburn@asl.com",
                            Name = "Kate Hepburn",
                            Phone = "31795515",
                            UpdateddAt = new DateTime(2012, 5, 19, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2018, 8, 11, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Oprah Hepburn@gmail.com",
                            Name = "Oprah Hepburn",
                            Phone = "16439854",
                            UpdateddAt = new DateTime(2018, 8, 11, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2003, 3, 3, 23, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Jimi Winslet@hotmail.com",
                            Name = "Jimi Winslet",
                            Phone = "46904835",
                            UpdateddAt = new DateTime(2003, 3, 3, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2018, 5, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Mick Trump@msn.com",
                            Name = "Mick Trump",
                            Phone = "85393579",
                            UpdateddAt = new DateTime(2018, 5, 31, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2006, 7, 16, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Donald Winfrey@gmail.com",
                            Name = "Donald Winfrey",
                            Phone = "18503967",
                            UpdateddAt = new DateTime(2006, 7, 16, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2021, 8, 20, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Donald Winslet@gmail.com",
                            Name = "Donald Winslet",
                            Phone = "96670993",
                            UpdateddAt = new DateTime(2021, 8, 20, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2004, 10, 16, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Elvis Hepburn@msn.com",
                            Name = "Elvis Hepburn",
                            Phone = "16969868",
                            UpdateddAt = new DateTime(2004, 10, 16, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2016, 7, 20, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Elvis Trump@outlook.com",
                            Name = "Elvis Trump",
                            Phone = "88686701",
                            UpdateddAt = new DateTime(2016, 7, 20, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2008, 6, 30, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Kate Winslet@msn.com",
                            Name = "Kate Winslet",
                            Phone = "64629183",
                            UpdateddAt = new DateTime(2008, 6, 30, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2017, 6, 14, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Kate Windsor@gmail.com",
                            Name = "Kate Windsor",
                            Phone = "83273098",
                            UpdateddAt = new DateTime(2017, 6, 14, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2022, 3, 12, 23, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Jimi Middleton@yahoo.com",
                            Name = "Jimi Middleton",
                            Phone = "41334261",
                            UpdateddAt = new DateTime(2022, 3, 12, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2002, 8, 16, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Donald Winslet@yahoo.com",
                            Name = "Donald Winslet",
                            Phone = "63766949",
                            UpdateddAt = new DateTime(2002, 8, 16, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2010, 4, 23, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Elvis Presley@yahoo.com",
                            Name = "Elvis Presley",
                            Phone = "71758658",
                            UpdateddAt = new DateTime(2010, 4, 23, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2023, 3, 2, 23, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Audrey Jagger@hotmail.com",
                            Name = "Audrey Jagger",
                            Phone = "26815908",
                            UpdateddAt = new DateTime(2023, 3, 2, 23, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.DatabaseModels.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("movie_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rating");

                    b.Property<int>("Runtime")
                        .HasColumnType("integer")
                        .HasColumnName("runtime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdateddAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2006, 4, 23, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Space Space",
                            Rating = "PPG-13 – Parents Strongly Cautioned",
                            Runtime = 205,
                            Title = "The Large Planets",
                            UpdateddAt = new DateTime(2006, 4, 23, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2011, 4, 13, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Western Dwarf",
                            Rating = "G – General Audiences",
                            Runtime = 138,
                            Title = "Several Transparent Flowers",
                            UpdateddAt = new DateTime(2011, 4, 13, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2018, 4, 11, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Pirate Cyberpunk",
                            Rating = "PPG-13 – Parents Strongly Cautioned",
                            Runtime = 178,
                            Title = "Several Large Houses",
                            UpdateddAt = new DateTime(2018, 4, 11, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2007, 7, 12, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Historic Romance",
                            Rating = "PPG-13 – Parents Strongly Cautioned",
                            Runtime = 115,
                            Title = "A bunch of Large Houses",
                            UpdateddAt = new DateTime(2007, 7, 12, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2006, 9, 6, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Sci-Fi Comedy",
                            Rating = "NC-17 – Adults Only",
                            Runtime = 129,
                            Title = "An army of Bitter Cars",
                            UpdateddAt = new DateTime(2006, 9, 6, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2009, 7, 11, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Adventure Comedy",
                            Rating = "PPG-13 – Parents Strongly Cautioned",
                            Runtime = 228,
                            Title = "Fifteen Large Buildings",
                            UpdateddAt = new DateTime(2009, 7, 11, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2007, 10, 19, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Space Pirate",
                            Rating = "PPG-13 – Parents Strongly Cautioned",
                            Runtime = 211,
                            Title = "A herd of Purple Planets",
                            UpdateddAt = new DateTime(2007, 10, 19, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2002, 4, 1, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Historic Space",
                            Rating = "G – General Audiences",
                            Runtime = 141,
                            Title = "An army of Bitter Houses",
                            UpdateddAt = new DateTime(2002, 4, 1, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2019, 6, 25, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Cyberpunk Cyberpunk",
                            Rating = "PG – Parental Guidance Suggested",
                            Runtime = 192,
                            Title = "A bunch of Rose Smelling Cars",
                            UpdateddAt = new DateTime(2019, 6, 25, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2012, 9, 12, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Pirate Fantasy",
                            Rating = "PG – Parental Guidance Suggested",
                            Runtime = 193,
                            Title = "An army of Orange Houses",
                            UpdateddAt = new DateTime(2012, 9, 12, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2008, 1, 22, 23, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Sci-Fi Comedy",
                            Rating = "PG – Parental Guidance Suggested",
                            Runtime = 189,
                            Title = "A herd of Rose Smelling Flowers",
                            UpdateddAt = new DateTime(2008, 1, 22, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2004, 8, 5, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Historic Sci-Fi",
                            Rating = "PG – Parental Guidance Suggested",
                            Runtime = 183,
                            Title = "An army of Microscopic Houses",
                            UpdateddAt = new DateTime(2004, 8, 5, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2008, 5, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Romance Pirate",
                            Rating = "PG – Parental Guidance Suggested",
                            Runtime = 235,
                            Title = "An army of Transparent Cars",
                            UpdateddAt = new DateTime(2008, 5, 31, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2022, 9, 30, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Fantasy Historic",
                            Rating = "PPG-13 – Parents Strongly Cautioned",
                            Runtime = 80,
                            Title = "Fifteen Purple Leopards",
                            UpdateddAt = new DateTime(2022, 9, 30, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2008, 8, 15, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Dwarf Historic",
                            Rating = "G – General Audiences",
                            Runtime = 110,
                            Title = "A bunch of Rose Smelling Planets",
                            UpdateddAt = new DateTime(2008, 8, 15, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2021, 7, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Sci-Fi Sci-Fi",
                            Rating = "R – Restricted",
                            Runtime = 154,
                            Title = "A bunch of Purple Leopards",
                            UpdateddAt = new DateTime(2021, 7, 31, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2020, 3, 6, 23, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Adventure Dwarf",
                            Rating = "PG – Parental Guidance Suggested",
                            Runtime = 82,
                            Title = "Fifteen Green Buildings",
                            UpdateddAt = new DateTime(2020, 3, 6, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2009, 3, 15, 23, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Adventure Adventure",
                            Rating = "R – Restricted",
                            Runtime = 87,
                            Title = "Fifteen Transparent Flowers",
                            UpdateddAt = new DateTime(2009, 3, 15, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2023, 2, 17, 23, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Romance Comedy",
                            Rating = "PPG-13 – Parents Strongly Cautioned",
                            Runtime = 176,
                            Title = "An army of Purple Leopards",
                            UpdateddAt = new DateTime(2023, 2, 17, 23, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.DatabaseModels.Screening", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("screening_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer")
                        .HasColumnName("capacity");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("MovieId")
                        .HasColumnType("integer")
                        .HasColumnName("movie_id");

                    b.Property<int>("ScreenNumber")
                        .HasColumnType("integer")
                        .HasColumnName("screen_number");

                    b.Property<DateTime>("StartsAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("starts_at");

                    b.Property<DateTime>("UpdateddAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Screenings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 20,
                            CreatedAt = new DateTime(2002, 2, 18, 23, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 8,
                            ScreenNumber = 2,
                            StartsAt = new DateTime(2002, 2, 18, 23, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2002, 2, 18, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 30,
                            CreatedAt = new DateTime(2017, 11, 14, 23, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 14,
                            ScreenNumber = 3,
                            StartsAt = new DateTime(2017, 11, 14, 23, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2017, 11, 14, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 30,
                            CreatedAt = new DateTime(2022, 8, 23, 22, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 12,
                            ScreenNumber = 3,
                            StartsAt = new DateTime(2022, 8, 23, 22, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2022, 8, 23, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 30,
                            CreatedAt = new DateTime(2018, 1, 10, 23, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 19,
                            ScreenNumber = 3,
                            StartsAt = new DateTime(2018, 1, 10, 23, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2018, 1, 10, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 20,
                            CreatedAt = new DateTime(2023, 9, 30, 22, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 19,
                            ScreenNumber = 2,
                            StartsAt = new DateTime(2023, 9, 30, 22, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2023, 9, 30, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 6,
                            Capacity = 40,
                            CreatedAt = new DateTime(2023, 11, 1, 23, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 3,
                            ScreenNumber = 4,
                            StartsAt = new DateTime(2023, 11, 1, 23, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2023, 11, 1, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7,
                            Capacity = 20,
                            CreatedAt = new DateTime(2015, 5, 21, 22, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 5,
                            ScreenNumber = 2,
                            StartsAt = new DateTime(2015, 5, 21, 22, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2015, 5, 21, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 8,
                            Capacity = 20,
                            CreatedAt = new DateTime(2016, 5, 22, 22, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 5,
                            ScreenNumber = 2,
                            StartsAt = new DateTime(2016, 5, 22, 22, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2016, 5, 22, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 9,
                            Capacity = 20,
                            CreatedAt = new DateTime(2014, 1, 2, 23, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 9,
                            ScreenNumber = 2,
                            StartsAt = new DateTime(2014, 1, 2, 23, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2014, 1, 2, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 10,
                            Capacity = 40,
                            CreatedAt = new DateTime(2014, 7, 12, 22, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 4,
                            ScreenNumber = 4,
                            StartsAt = new DateTime(2014, 7, 12, 22, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2014, 7, 12, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 11,
                            Capacity = 30,
                            CreatedAt = new DateTime(2002, 9, 12, 22, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 17,
                            ScreenNumber = 3,
                            StartsAt = new DateTime(2002, 9, 12, 22, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2002, 9, 12, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 12,
                            Capacity = 30,
                            CreatedAt = new DateTime(2009, 10, 22, 22, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 17,
                            ScreenNumber = 3,
                            StartsAt = new DateTime(2009, 10, 22, 22, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2009, 10, 22, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 13,
                            Capacity = 30,
                            CreatedAt = new DateTime(2008, 9, 21, 22, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 10,
                            ScreenNumber = 3,
                            StartsAt = new DateTime(2008, 9, 21, 22, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2008, 9, 21, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 14,
                            Capacity = 10,
                            CreatedAt = new DateTime(2001, 1, 8, 23, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 4,
                            ScreenNumber = 1,
                            StartsAt = new DateTime(2001, 1, 8, 23, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2001, 1, 8, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 15,
                            Capacity = 50,
                            CreatedAt = new DateTime(2015, 2, 4, 23, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 18,
                            ScreenNumber = 5,
                            StartsAt = new DateTime(2015, 2, 4, 23, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2015, 2, 4, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 16,
                            Capacity = 20,
                            CreatedAt = new DateTime(2007, 6, 14, 22, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 4,
                            ScreenNumber = 2,
                            StartsAt = new DateTime(2007, 6, 14, 22, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2007, 6, 14, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 17,
                            Capacity = 40,
                            CreatedAt = new DateTime(2010, 10, 26, 22, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 1,
                            ScreenNumber = 4,
                            StartsAt = new DateTime(2010, 10, 26, 22, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2010, 10, 26, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 18,
                            Capacity = 10,
                            CreatedAt = new DateTime(2020, 8, 5, 22, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 9,
                            ScreenNumber = 1,
                            StartsAt = new DateTime(2020, 8, 5, 22, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2020, 8, 5, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 19,
                            Capacity = 10,
                            CreatedAt = new DateTime(2002, 11, 16, 23, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 18,
                            ScreenNumber = 1,
                            StartsAt = new DateTime(2002, 11, 16, 23, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2002, 11, 16, 23, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.DatabaseModels.Screening", b =>
                {
                    b.HasOne("api_cinema_challenge.Models.DatabaseModels.Movie", null)
                        .WithMany("Screenings")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api_cinema_challenge.Models.DatabaseModels.Movie", b =>
                {
                    b.Navigation("Screenings");
                });
#pragma warning restore 612, 618
        }
    }
}
