// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using api_cinema_challenge.Data;

#nullable disable

namespace api_cinema_challenge.Migrations
{
    [DbContext(typeof(CinemaContext))]
    [Migration("20240912121516_secondMigration")]
    partial class secondMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("api_cinema_challenge.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdAt");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updatedAt");

                    b.HasKey("Id");

                    b.ToTable("customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(7862),
                            Email = "Ma@snailmail.com",
                            Name = "Mario the Echidna",
                            Phone = "+46439195962",
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(7862)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(7875),
                            Email = "Po@snailmail.com",
                            Name = "Patrick Mario",
                            Phone = "+46231430050",
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(7875)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(7882),
                            Email = "Ya@snailmail.com",
                            Name = "Yoshi the Echidna",
                            Phone = "+46509109411",
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(7882)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(7888),
                            Email = "Ph@snailmail.com",
                            Name = "Patrick Peach",
                            Phone = "+46676273396",
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(7888)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8014),
                            Email = "Pa@snailmail.com",
                            Name = "Princess the Echidna",
                            Phone = "+46711484461",
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8014)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8024),
                            Email = "Lr@snailmail.com",
                            Name = "Luigi the Dinosaur",
                            Phone = "+46965234826",
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8024)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8030),
                            Email = "Py@snailmail.com",
                            Name = "Princess Daisy",
                            Phone = "+46773878524",
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8030)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8036),
                            Email = "Ka@snailmail.com",
                            Name = "Knuckles the Echidna",
                            Phone = "+46098848588",
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8036)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8042),
                            Email = "Yh@snailmail.com",
                            Name = "Yoshi Peach",
                            Phone = "+46275119578",
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8042)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8049),
                            Email = "Ls@snailmail.com",
                            Name = "Luigi Cheeks",
                            Phone = "+46441437596",
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8049)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdAt");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rating");

                    b.Property<int>("RuntimeMins")
                        .HasColumnType("integer")
                        .HasColumnName("runtimeMins");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updatedAt");

                    b.HasKey("Id");

                    b.ToTable("movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8056),
                            Description = "Hold on to your popcorn, cause this movie is filled with incredible action scenes that will leave you speechless",
                            Rating = "PG-7",
                            RuntimeMins = 122,
                            Title = "Beauty & the Trumpet",
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8056)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8060),
                            Description = "Hold on to your popcorn, cause this movie is filled with incredible action scenes that will leave you speechless",
                            Rating = "PG-13",
                            RuntimeMins = 166,
                            Title = "Frog",
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8060)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8062),
                            Description = "Hold on to your popcorn, cause this movie is filled with incredible action scenes that will leave you speechless",
                            Rating = "PG-13",
                            RuntimeMins = 146,
                            Title = "Dystopian Boys",
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8062)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8064),
                            Description = "Hold on to your popcorn, cause this movie is filled with incredible action scenes that will leave you speechless",
                            Rating = "PG-7",
                            RuntimeMins = 233,
                            Title = "Elf on the Boys",
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8064)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8065),
                            Description = "This movie will rock your socks with comedy beyond your wildest expectations!",
                            Rating = "PG-3",
                            RuntimeMins = 143,
                            Title = "Saving the Bees",
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8065)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8068),
                            Description = "A sad story filled with drama and anticipation",
                            Rating = "PG-7",
                            RuntimeMins = 62,
                            Title = "Saving the Boys",
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8068)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8069),
                            Description = "This movie will rock your socks with comedy beyond your wildest expectations!",
                            Rating = "PG-7",
                            RuntimeMins = 116,
                            Title = "Shelf",
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8069)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8071),
                            Description = "A sad story filled with drama and anticipation",
                            Rating = "PG-13",
                            RuntimeMins = 89,
                            Title = "Crazy Trumpet",
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8071)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8072),
                            Description = "A sad story filled with drama and anticipation",
                            Rating = "PG-3",
                            RuntimeMins = 89,
                            Title = "Elf on the Trumpet",
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8072)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8075),
                            Description = "A sad story filled with drama and anticipation",
                            Rating = "PG-3",
                            RuntimeMins = 168,
                            Title = "Lady & the Shelf",
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8075)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Screening", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer")
                        .HasColumnName("capacity");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdAt");

                    b.Property<int>("MovieId")
                        .HasColumnType("integer")
                        .HasColumnName("movieId");

                    b.Property<int>("ScreenNumber")
                        .HasColumnType("integer")
                        .HasColumnName("screenNumber");

                    b.Property<DateTime>("StartsAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("startsAt");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updatedAt");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("screenings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 40,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8154),
                            MovieId = 8,
                            ScreenNumber = 5,
                            StartsAt = new DateTime(2024, 9, 15, 9, 15, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8154)
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 34,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8208),
                            MovieId = 1,
                            ScreenNumber = 2,
                            StartsAt = new DateTime(2024, 9, 13, 13, 30, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8208)
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 50,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8215),
                            MovieId = 9,
                            ScreenNumber = 10,
                            StartsAt = new DateTime(2024, 9, 15, 4, 30, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8215)
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 48,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8221),
                            MovieId = 5,
                            ScreenNumber = 9,
                            StartsAt = new DateTime(2024, 9, 14, 17, 45, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8221)
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 36,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8227),
                            MovieId = 3,
                            ScreenNumber = 3,
                            StartsAt = new DateTime(2024, 9, 14, 23, 45, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8227)
                        },
                        new
                        {
                            Id = 6,
                            Capacity = 36,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8234),
                            MovieId = 10,
                            ScreenNumber = 3,
                            StartsAt = new DateTime(2024, 9, 13, 7, 45, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8234)
                        },
                        new
                        {
                            Id = 7,
                            Capacity = 34,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8241),
                            MovieId = 4,
                            ScreenNumber = 2,
                            StartsAt = new DateTime(2024, 9, 12, 15, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8241)
                        },
                        new
                        {
                            Id = 8,
                            Capacity = 48,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8246),
                            MovieId = 4,
                            ScreenNumber = 9,
                            StartsAt = new DateTime(2024, 9, 12, 17, 45, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8246)
                        },
                        new
                        {
                            Id = 9,
                            Capacity = 32,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8252),
                            MovieId = 1,
                            ScreenNumber = 1,
                            StartsAt = new DateTime(2024, 9, 14, 20, 30, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8252)
                        },
                        new
                        {
                            Id = 10,
                            Capacity = 48,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8259),
                            MovieId = 1,
                            ScreenNumber = 9,
                            StartsAt = new DateTime(2024, 9, 14, 14, 30, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8259)
                        },
                        new
                        {
                            Id = 11,
                            Capacity = 46,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8265),
                            MovieId = 1,
                            ScreenNumber = 8,
                            StartsAt = new DateTime(2024, 9, 13, 0, 30, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8265)
                        },
                        new
                        {
                            Id = 12,
                            Capacity = 32,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8272),
                            MovieId = 5,
                            ScreenNumber = 1,
                            StartsAt = new DateTime(2024, 9, 13, 17, 30, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8272)
                        },
                        new
                        {
                            Id = 13,
                            Capacity = 40,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8278),
                            MovieId = 5,
                            ScreenNumber = 5,
                            StartsAt = new DateTime(2024, 9, 15, 5, 45, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8278)
                        },
                        new
                        {
                            Id = 14,
                            Capacity = 40,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8284),
                            MovieId = 2,
                            ScreenNumber = 5,
                            StartsAt = new DateTime(2024, 9, 12, 16, 30, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8284)
                        },
                        new
                        {
                            Id = 15,
                            Capacity = 32,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8289),
                            MovieId = 7,
                            ScreenNumber = 1,
                            StartsAt = new DateTime(2024, 9, 15, 2, 30, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8289)
                        },
                        new
                        {
                            Id = 16,
                            Capacity = 32,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8294),
                            MovieId = 7,
                            ScreenNumber = 1,
                            StartsAt = new DateTime(2024, 9, 15, 5, 15, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8294)
                        },
                        new
                        {
                            Id = 17,
                            Capacity = 36,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8300),
                            MovieId = 6,
                            ScreenNumber = 3,
                            StartsAt = new DateTime(2024, 9, 13, 20, 30, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8300)
                        },
                        new
                        {
                            Id = 18,
                            Capacity = 46,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8309),
                            MovieId = 7,
                            ScreenNumber = 8,
                            StartsAt = new DateTime(2024, 9, 15, 8, 30, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8309)
                        },
                        new
                        {
                            Id = 19,
                            Capacity = 46,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8315),
                            MovieId = 5,
                            ScreenNumber = 8,
                            StartsAt = new DateTime(2024, 9, 15, 8, 15, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8315)
                        },
                        new
                        {
                            Id = 20,
                            Capacity = 38,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8321),
                            MovieId = 1,
                            ScreenNumber = 4,
                            StartsAt = new DateTime(2024, 9, 13, 9, 30, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8321)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdAt");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("customerId");

                    b.Property<int>("NumSeats")
                        .HasColumnType("integer")
                        .HasColumnName("numSeats");

                    b.Property<int>("ScreeningId")
                        .HasColumnType("integer")
                        .HasColumnName("screeningId");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updatedAt");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ScreeningId");

                    b.ToTable("tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8327),
                            CustomerId = 7,
                            NumSeats = 3,
                            ScreeningId = 17,
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8327)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8331),
                            CustomerId = 10,
                            NumSeats = 3,
                            ScreeningId = 19,
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8331)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8333),
                            CustomerId = 5,
                            NumSeats = 1,
                            ScreeningId = 10,
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8333)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8334),
                            CustomerId = 2,
                            NumSeats = 2,
                            ScreeningId = 8,
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8334)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8336),
                            CustomerId = 7,
                            NumSeats = 1,
                            ScreeningId = 7,
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8336)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8338),
                            CustomerId = 5,
                            NumSeats = 2,
                            ScreeningId = 1,
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8338)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8339),
                            CustomerId = 3,
                            NumSeats = 3,
                            ScreeningId = 5,
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8339)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8340),
                            CustomerId = 5,
                            NumSeats = 2,
                            ScreeningId = 17,
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8340)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8342),
                            CustomerId = 9,
                            NumSeats = 5,
                            ScreeningId = 20,
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8342)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8344),
                            CustomerId = 10,
                            NumSeats = 4,
                            ScreeningId = 20,
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8344)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8345),
                            CustomerId = 10,
                            NumSeats = 4,
                            ScreeningId = 1,
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8345)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8346),
                            CustomerId = 4,
                            NumSeats = 4,
                            ScreeningId = 14,
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8346)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8347),
                            CustomerId = 2,
                            NumSeats = 5,
                            ScreeningId = 13,
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8347)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8348),
                            CustomerId = 4,
                            NumSeats = 4,
                            ScreeningId = 15,
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8348)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8349),
                            CustomerId = 8,
                            NumSeats = 4,
                            ScreeningId = 1,
                            UpdatedAt = new DateTime(2024, 9, 12, 12, 15, 16, 93, DateTimeKind.Utc).AddTicks(8349)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Screening", b =>
                {
                    b.HasOne("api_cinema_challenge.Models.Movie", "Movie")
                        .WithMany("Screenings")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Ticket", b =>
                {
                    b.HasOne("api_cinema_challenge.Models.Customer", "Customer")
                        .WithMany("tickets")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_cinema_challenge.Models.Screening", "Screening")
                        .WithMany("tickets")
                        .HasForeignKey("ScreeningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Screening");
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Customer", b =>
                {
                    b.Navigation("tickets");
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Movie", b =>
                {
                    b.Navigation("Screenings");
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Screening", b =>
                {
                    b.Navigation("tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
