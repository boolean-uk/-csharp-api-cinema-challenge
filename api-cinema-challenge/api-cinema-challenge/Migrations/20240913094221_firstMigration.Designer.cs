// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using api_cinema_challenge.Data;

#nullable disable

namespace api_cinema_challenge.Migrations
{
    [DbContext(typeof(CinemaContext))]
    [Migration("20240913094221_firstMigration")]
    partial class firstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("api_cinema_challenge.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Phone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Updated A");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3574),
                            Email = "john.wick@hollywoodmail.com",
                            Name = "Felix Lothbrok",
                            Phone = "(555) 123-7890",
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3624)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3633),
                            Email = "r.stone@actionstar.net",
                            Name = "Ragnar Schwarzenegger",
                            Phone = "(555) 987-6543",
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3657)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3661),
                            Email = "stallone.sylvester@moviefan.com",
                            Name = "Donald Sandler",
                            Phone = "(555) 246-8102",
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3664)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3668),
                            Email = "v.diesel@stuntman.com",
                            Name = "Neo Mathiasson",
                            Phone = "(555) 369-1470",
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3674)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3677),
                            Email = "arnold@cybermail.com",
                            Name = "Donald Andersson",
                            Phone = "(555) 482-9357",
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3680)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3697),
                            Email = "j.bourne@spyfilms.org",
                            Name = "Elvis Sandler",
                            Phone = "(555) 678-9123",
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3700)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3703),
                            Email = "bruce.willis@explosions.net",
                            Name = "Mickey Sandler",
                            Phone = "(555) 314-1592",
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3706)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3709),
                            Email = "n.cage@thrillride.com",
                            Name = "Kate Mathiasson",
                            Phone = "(555) 753-9514",
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3727)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3730),
                            Email = "l.neeson@hollywoodhero.com",
                            Name = "Charles Obama",
                            Phone = "(555) 806-4213",
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3733)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3737),
                            Email = "the.rock@adventurezone.net",
                            Name = "Ragnar Schwarzenegger",
                            Phone = "(555) 467-8921",
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3742)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Description");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Rating");

                    b.Property<int>("RunTimeMins")
                        .HasColumnType("integer")
                        .HasColumnName("RunTimeMins");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Updated A");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3758),
                            Description = "Cyborg assassin hunts future savior.",
                            Rating = "R",
                            RunTimeMins = 107,
                            Title = "The Terminator",
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3762)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3767),
                            Description = "Commandos hunted by alien warrior.",
                            Rating = "R",
                            RunTimeMins = 107,
                            Title = "Predator",
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3770)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3773),
                            Description = "Ex-soldier fights to rescue daughter.",
                            Rating = "R",
                            RunTimeMins = 90,
                            Title = "Commando",
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3776)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3779),
                            Description = "Man questions reality and identity.",
                            Rating = "R",
                            RunTimeMins = 113,
                            Title = "Total Recall",
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3781)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3784),
                            Description = "Prison break with unlikely alliance.",
                            Rating = "R",
                            RunTimeMins = 115,
                            Title = "The Escape Plan",
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3786)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3818),
                            Description = "Soldier returns to rescue POWs.",
                            Rating = "R",
                            RunTimeMins = 96,
                            Title = "Rambo: First Blood Part II",
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3822)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3825),
                            Description = "Boxer fights Soviet powerhouse.",
                            Rating = "PG",
                            RunTimeMins = 91,
                            Title = "Rocky IV",
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3828)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3831),
                            Description = "Cop battles violent crime cult.",
                            Rating = "R",
                            RunTimeMins = 87,
                            Title = "Cobra",
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3834)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3836),
                            Description = "Frozen cop versus unfrozen criminal.",
                            Rating = "R",
                            RunTimeMins = 115,
                            Title = "Demolition Man",
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3839)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3842),
                            Description = "Rescuer fights criminals on mountains.",
                            Rating = "R",
                            RunTimeMins = 113,
                            Title = "Cliffhanger",
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3845)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Screening", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer")
                        .HasColumnName("Capacity");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAt");

                    b.Property<int>("MovieId")
                        .HasColumnType("integer")
                        .HasColumnName("MovieId");

                    b.Property<int>("ScreenNumber")
                        .HasColumnType("integer")
                        .HasColumnName("ScreenNumber");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Updated At");

                    b.Property<DateTime>("startsAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("StartsAt");

                    b.HasKey("Id");

                    b.ToTable("Screenings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 59,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3874),
                            MovieId = 1,
                            ScreenNumber = 1,
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3878),
                            startsAt = new DateTime(2025, 4, 4, 20, 29, 28, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 36,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3911),
                            MovieId = 2,
                            ScreenNumber = 2,
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3913),
                            startsAt = new DateTime(2024, 11, 2, 21, 30, 22, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 39,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3926),
                            MovieId = 3,
                            ScreenNumber = 3,
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3929),
                            startsAt = new DateTime(2025, 1, 10, 6, 49, 20, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 53,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3940),
                            MovieId = 4,
                            ScreenNumber = 4,
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3942),
                            startsAt = new DateTime(2024, 11, 15, 6, 27, 34, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 36,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3953),
                            MovieId = 5,
                            ScreenNumber = 5,
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3956),
                            startsAt = new DateTime(2024, 11, 15, 22, 23, 51, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 6,
                            Capacity = 57,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3978),
                            MovieId = 6,
                            ScreenNumber = 6,
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3981),
                            startsAt = new DateTime(2025, 4, 1, 10, 48, 52, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7,
                            Capacity = 31,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(4068),
                            MovieId = 7,
                            ScreenNumber = 7,
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(4072),
                            startsAt = new DateTime(2025, 2, 14, 11, 21, 26, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 8,
                            Capacity = 59,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(4084),
                            MovieId = 8,
                            ScreenNumber = 8,
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(4087),
                            startsAt = new DateTime(2025, 3, 8, 10, 5, 2, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 9,
                            Capacity = 58,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(4098),
                            MovieId = 9,
                            ScreenNumber = 9,
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(4100),
                            startsAt = new DateTime(2025, 2, 20, 13, 10, 36, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 10,
                            Capacity = 55,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(4116),
                            MovieId = 10,
                            ScreenNumber = 10,
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(4118),
                            startsAt = new DateTime(2024, 10, 4, 16, 13, 33, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAt");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("customerId");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("integer")
                        .HasColumnName("numSeats");

                    b.Property<int>("ScreeningId")
                        .HasColumnType("integer")
                        .HasColumnName("screeningId");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Updated At");

                    b.HasKey("Id");

                    b.ToTable("tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3887),
                            CustomerId = 1,
                            NumberOfSeats = 3,
                            ScreeningId = 1,
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3890)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3917),
                            CustomerId = 2,
                            NumberOfSeats = 2,
                            ScreeningId = 2,
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3919)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3932),
                            CustomerId = 3,
                            NumberOfSeats = 1,
                            ScreeningId = 3,
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3934)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3945),
                            CustomerId = 4,
                            NumberOfSeats = 2,
                            ScreeningId = 4,
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3948)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3966),
                            CustomerId = 5,
                            NumberOfSeats = 3,
                            ScreeningId = 5,
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3969)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3984),
                            CustomerId = 6,
                            NumberOfSeats = 1,
                            ScreeningId = 6,
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(3987)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(4075),
                            CustomerId = 7,
                            NumberOfSeats = 3,
                            ScreeningId = 7,
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(4078)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(4090),
                            CustomerId = 8,
                            NumberOfSeats = 3,
                            ScreeningId = 8,
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(4092)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(4104),
                            CustomerId = 9,
                            NumberOfSeats = 1,
                            ScreeningId = 9,
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(4107)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(4121),
                            CustomerId = 10,
                            NumberOfSeats = 1,
                            ScreeningId = 10,
                            UpdatedAt = new DateTime(2024, 9, 13, 9, 42, 18, 74, DateTimeKind.Utc).AddTicks(4124)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
