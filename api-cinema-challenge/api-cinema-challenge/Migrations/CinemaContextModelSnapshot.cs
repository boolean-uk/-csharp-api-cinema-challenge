// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using api_cinema_challenge.Data;

#nullable disable

namespace api_cinema_challenge.Migrations
{
    [DbContext(typeof(CinemaContext))]
    partial class CinemaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("api_cinema_challenge.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rating");

                    b.Property<int>("RuntimeMins")
                        .HasColumnType("integer")
                        .HasColumnName("runtime_mins");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 5, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(254),
                            Description = "A short comedy movie",
                            Rating = "Good",
                            RuntimeMins = 77,
                            Title = "The Sweet Potato",
                            UpdatedAt = new DateTime(2024, 2, 5, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(254)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 31, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(256),
                            Description = "A thrilling mystery movie",
                            Rating = "Excellent",
                            RuntimeMins = 120,
                            Title = "Mystery Mansion",
                            UpdatedAt = new DateTime(2024, 2, 2, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(257)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 26, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(258),
                            Description = "A beautiful romantic movie",
                            Rating = "Great",
                            RuntimeMins = 90,
                            Title = "Romantic Sunset",
                            UpdatedAt = new DateTime(2024, 1, 28, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(258)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 1, 21, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(260),
                            Description = "An epic science fiction movie",
                            Rating = "Excellent",
                            RuntimeMins = 150,
                            Title = "Sci-Fi Odyssey",
                            UpdatedAt = new DateTime(2024, 1, 24, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(260)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 1, 16, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(261),
                            Description = "A gripping drama movie",
                            Rating = "Good",
                            RuntimeMins = 110,
                            Title = "Drama Junction",
                            UpdatedAt = new DateTime(2024, 1, 18, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(262)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Screening", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("integer")
                        .HasColumnName("movie_id");

                    b.Property<int>("ScreenNumber")
                        .HasColumnType("integer")
                        .HasColumnName("screen_number");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_time");

                    b.Property<int>("Capacity")
                        .HasColumnType("integer")
                        .HasColumnName("capacity");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("MovieId", "ScreenNumber", "StartTime");

                    b.ToTable("screenings");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            ScreenNumber = 1,
                            StartTime = new DateTime(2024, 2, 5, 12, 30, 49, 300, DateTimeKind.Utc).AddTicks(1387),
                            Capacity = 100,
                            CreatedAt = new DateTime(2024, 2, 5, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(1389),
                            UpdatedAt = new DateTime(2024, 2, 5, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(1389)
                        },
                        new
                        {
                            MovieId = 1,
                            ScreenNumber = 2,
                            StartTime = new DateTime(2024, 2, 5, 14, 30, 49, 300, DateTimeKind.Utc).AddTicks(1391),
                            Capacity = 120,
                            CreatedAt = new DateTime(2024, 2, 5, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(1391),
                            UpdatedAt = new DateTime(2024, 2, 5, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(1392)
                        },
                        new
                        {
                            MovieId = 2,
                            ScreenNumber = 3,
                            StartTime = new DateTime(2024, 2, 5, 15, 30, 49, 300, DateTimeKind.Utc).AddTicks(1393),
                            Capacity = 70,
                            CreatedAt = new DateTime(2024, 2, 5, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(1393),
                            UpdatedAt = new DateTime(2024, 2, 5, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(1394)
                        },
                        new
                        {
                            MovieId = 2,
                            ScreenNumber = 4,
                            StartTime = new DateTime(2024, 2, 5, 12, 30, 49, 300, DateTimeKind.Utc).AddTicks(1395),
                            Capacity = 80,
                            CreatedAt = new DateTime(2024, 2, 5, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(1395),
                            UpdatedAt = new DateTime(2024, 2, 5, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(1395)
                        },
                        new
                        {
                            MovieId = 3,
                            ScreenNumber = 5,
                            StartTime = new DateTime(2024, 2, 5, 16, 30, 49, 300, DateTimeKind.Utc).AddTicks(1396),
                            Capacity = 83,
                            CreatedAt = new DateTime(2024, 2, 5, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(1397),
                            UpdatedAt = new DateTime(2024, 2, 5, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(1397)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 5, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(62),
                            Email = "joel@email.com",
                            Name = "Joel Joelsson",
                            PhoneNumber = "0700050088",
                            UpdatedAt = new DateTime(2024, 2, 5, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(64)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 3, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(67),
                            Email = "alice@email.com",
                            Name = "Alice Johnson",
                            PhoneNumber = "0701122334",
                            UpdatedAt = new DateTime(2024, 2, 3, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(73)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 31, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(74),
                            Email = "bob@email.com",
                            Name = "Bob Smith",
                            PhoneNumber = "0709876543",
                            UpdatedAt = new DateTime(2024, 2, 2, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(75)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 1, 28, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(76),
                            Email = "emma@email.com",
                            Name = "Emma White",
                            PhoneNumber = "0703344556",
                            UpdatedAt = new DateTime(2024, 1, 30, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(76)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 1, 26, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(78),
                            Email = "david@email.com",
                            Name = "David Brown",
                            PhoneNumber = "0706677889",
                            UpdatedAt = new DateTime(2024, 1, 29, 11, 30, 49, 300, DateTimeKind.Utc).AddTicks(78)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
