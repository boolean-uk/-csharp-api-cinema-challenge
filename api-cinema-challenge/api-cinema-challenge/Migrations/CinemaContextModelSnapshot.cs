// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using api_cinema_challenge.Data;

#nullable disable

namespace api_cinema_challenge.Migrations
{
    [DbContext(typeof(CinemaContext))]
    partial class CinemaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("api_cinema_challenge.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1001),
                            Email = "whyyyy@doihavetowritethis.net",
                            Name = "jefow",
                            Phone = "48724242",
                            UpdatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1001)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1004),
                            Email = "whyyyy@doihavetowritethis.net",
                            Name = "fwjio",
                            Phone = "48724242",
                            UpdatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1005)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1006),
                            Email = "fjiejf@fijefj.com",
                            Name = "jefow",
                            Phone = "42478247",
                            UpdatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1006)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1007),
                            Email = "fjiejf@fijefj.com",
                            Name = "coiv",
                            Phone = "59854853",
                            UpdatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1007)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1008),
                            Email = "whyyyy@doihavetowritethis.net",
                            Name = "ocvic",
                            Phone = "42478247",
                            UpdatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1008)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rating");

                    b.Property<int>("Runtime")
                        .HasColumnType("integer")
                        .HasColumnName("runtime_minutes");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1016),
                            Description = "oekroe oke oek oek eo ke",
                            Rating = "PG-18",
                            Runtime = 183,
                            Title = "Wherefore",
                            UpdatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1016)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1019),
                            Description = "fijsogjoijg eofkofe koeo ke",
                            Rating = "PG-39",
                            Runtime = 132,
                            Title = "Thou",
                            UpdatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1020)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1021),
                            Description = "oekroe oke oek oek eo ke",
                            Rating = "PG-18",
                            Runtime = 68,
                            Title = "Why",
                            UpdatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1021)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1022),
                            Description = "fijsogjoijg eofkofe koeo ke",
                            Rating = "PG-18",
                            Runtime = 66,
                            Title = "Thou",
                            UpdatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1022)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Screening", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer")
                        .HasColumnName("capacity");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("MovieId")
                        .HasColumnType("integer")
                        .HasColumnName("movie_id");

                    b.Property<int>("ScreenNumber")
                        .HasColumnType("integer")
                        .HasColumnName("screen_number");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("starts_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("screenings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 62,
                            CreatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1027),
                            MovieId = 3,
                            ScreenNumber = 50,
                            StartTime = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1027),
                            UpdatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1027)
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 40,
                            CreatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1031),
                            MovieId = 1,
                            ScreenNumber = 84,
                            StartTime = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1031),
                            UpdatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1032)
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 94,
                            CreatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1033),
                            MovieId = 2,
                            ScreenNumber = 64,
                            StartTime = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1033),
                            UpdatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1033)
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 2,
                            CreatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1034),
                            MovieId = 2,
                            ScreenNumber = 28,
                            StartTime = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1034),
                            UpdatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1034)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("customer_id");

                    b.Property<int>("ScreeningId")
                        .HasColumnType("integer")
                        .HasColumnName("screening_id");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("integer")
                        .HasColumnName("seat_num");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1039),
                            CustomerId = 4,
                            ScreeningId = 1,
                            SeatNumber = 57,
                            UpdatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1039)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1041),
                            CustomerId = 1,
                            ScreeningId = 3,
                            SeatNumber = 21,
                            UpdatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1041)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1042),
                            CustomerId = 5,
                            ScreeningId = 3,
                            SeatNumber = 26,
                            UpdatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1043)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1043),
                            CustomerId = 1,
                            ScreeningId = 1,
                            SeatNumber = 61,
                            UpdatedAt = new DateTime(2024, 2, 7, 11, 2, 20, 439, DateTimeKind.Utc).AddTicks(1044)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
