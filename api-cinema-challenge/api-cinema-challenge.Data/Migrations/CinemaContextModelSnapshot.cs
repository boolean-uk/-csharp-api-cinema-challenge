// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using api_cinema_challenge.Data;

#nullable disable

namespace api_cinema_challenge.Data.Migrations
{
    [DbContext(typeof(CinemaContext))]
    partial class CinemaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("api_cinema_challenge.Application.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("date")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("date")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(6863),
                            Email = "David@email.com",
                            Name = "David",
                            Phone = "49820343"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(6894),
                            Email = "David@email.com",
                            Name = "David",
                            Phone = "64796567"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(6899),
                            Email = "Frank@email.com",
                            Name = "Frank",
                            Phone = "49097539"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(6903),
                            Email = "Piotr@email.com",
                            Name = "Piotr",
                            Phone = "96052298"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(6907),
                            Email = "Frank@email.com",
                            Name = "Frank",
                            Phone = "69340308"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(6916),
                            Email = "Frank@email.com",
                            Name = "Frank",
                            Phone = "36100292"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(6920),
                            Email = "Frank@email.com",
                            Name = "Frank",
                            Phone = "71598014"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(6923),
                            Email = "Ruben@email.com",
                            Name = "Ruben",
                            Phone = "38517879"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(6926),
                            Email = "Elisabeth@email.com",
                            Name = "Elisabeth",
                            Phone = "93274298"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(6931),
                            Email = "Frank@email.com",
                            Name = "Frank",
                            Phone = "32836683"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(6964),
                            Email = "David@email.com",
                            Name = "David",
                            Phone = "60434274"
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Application.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("date")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("Rating")
                        .HasColumnType("integer")
                        .HasColumnName("rating");

                    b.Property<int>("RuntimeMins")
                        .HasColumnType("integer")
                        .HasColumnName("runtime_mins");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("date")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(7125),
                            Description = "A movie about a Swan that is quite Amazing",
                            Rating = 1,
                            RuntimeMins = 211,
                            Title = "The Amazing Swan"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(7244),
                            Description = "A movie about a Policeman that is quite Mad",
                            Rating = 1,
                            RuntimeMins = 170,
                            Title = "The Mad Policeman"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(7249),
                            Description = "A movie about a Piper that is quite Seethrough",
                            Rating = 1,
                            RuntimeMins = 76,
                            Title = "The Seethrough Piper"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(7253),
                            Description = "A movie about a Policeman that is quite Purple",
                            Rating = 0,
                            RuntimeMins = 61,
                            Title = "The Purple Policeman"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(7257),
                            Description = "A movie about a Computer that is quite Seethrough",
                            Rating = 0,
                            RuntimeMins = 183,
                            Title = "The Seethrough Computer"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(7262),
                            Description = "A movie about a Piper that is quite Round",
                            Rating = 2,
                            RuntimeMins = 92,
                            Title = "The Round Piper"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(7266),
                            Description = "A movie about a Swan that is quite Slow",
                            Rating = 0,
                            RuntimeMins = 256,
                            Title = "The Slow Swan"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(7269),
                            Description = "A movie about a Swan that is quite Purple",
                            Rating = 2,
                            RuntimeMins = 210,
                            Title = "The Purple Swan"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(7272),
                            Description = "A movie about a Policeman that is quite Round",
                            Rating = 1,
                            RuntimeMins = 184,
                            Title = "The Round Policeman"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(7277),
                            Description = "A movie about a Leopard that is quite Round",
                            Rating = 2,
                            RuntimeMins = 189,
                            Title = "The Round Leopard"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(7280),
                            Description = "A movie about a Computer that is quite Amazing",
                            Rating = 3,
                            RuntimeMins = 239,
                            Title = "The Amazing Computer"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(7284),
                            Description = "A movie about a Swan that is quite Seethrough",
                            Rating = 2,
                            RuntimeMins = 78,
                            Title = "The Seethrough Swan"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(7287),
                            Description = "A movie about a Piper that is quite Fast",
                            Rating = 3,
                            RuntimeMins = 112,
                            Title = "The Fast Piper"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(7291),
                            Description = "A movie about a Leopard that is quite Slow",
                            Rating = 3,
                            RuntimeMins = 78,
                            Title = "The Slow Leopard"
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Application.Models.Screening", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer")
                        .HasColumnName("capacity");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("date")
                        .HasColumnName("created_at");

                    b.Property<int>("MovieId")
                        .HasColumnType("integer")
                        .HasColumnName("movie_id");

                    b.Property<DateTime>("StartsAt")
                        .HasColumnType("date")
                        .HasColumnName("starts_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("date")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("screenings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 58,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieId = 11,
                            StartsAt = new DateTime(2024, 2, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 56,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieId = 2,
                            StartsAt = new DateTime(2024, 2, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 37,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieId = 5,
                            StartsAt = new DateTime(2024, 2, 8, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 56,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieId = 4,
                            StartsAt = new DateTime(2024, 2, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 59,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieId = 12,
                            StartsAt = new DateTime(2024, 2, 12, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 6,
                            Capacity = 38,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieId = 7,
                            StartsAt = new DateTime(2024, 2, 13, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Application.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("date")
                        .HasColumnName("created_at");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("customer_id");

                    b.Property<int>("NumSeats")
                        .HasColumnType("integer")
                        .HasColumnName("num_seats");

                    b.Property<int>("ScreeningId")
                        .HasColumnType("integer")
                        .HasColumnName("screening_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("date")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ScreeningId");

                    b.ToTable("tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(7395),
                            CustomerId = 1,
                            NumSeats = 4,
                            ScreeningId = 3
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(7400),
                            CustomerId = 3,
                            NumSeats = 2,
                            ScreeningId = 4
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 6, 14, 31, 30, 152, DateTimeKind.Local).AddTicks(7402),
                            CustomerId = 2,
                            NumSeats = 1,
                            ScreeningId = 1
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Application.Models.Screening", b =>
                {
                    b.HasOne("api_cinema_challenge.Application.Models.Movie", "Movie")
                        .WithMany("screenings")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("api_cinema_challenge.Application.Models.Ticket", b =>
                {
                    b.HasOne("api_cinema_challenge.Application.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_cinema_challenge.Application.Models.Screening", null)
                        .WithMany()
                        .HasForeignKey("ScreeningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api_cinema_challenge.Application.Models.Movie", b =>
                {
                    b.Navigation("screenings");
                });
#pragma warning restore 612, 618
        }
    }
}
