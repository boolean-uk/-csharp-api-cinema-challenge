// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using api_cinema_challenge.Data;

#nullable disable

namespace api_cinema_challenge.Migrations
{
    [DbContext(typeof(CinemaContext))]
    [Migration("20240208135037_addedTicket")]
    partial class addedTicket
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("api_cinema_challenge.Models.DatabaseModels.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("customer_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<DateTime>("UpdateddAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2004, 1, 14, 23, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Donald Obama@yahoo.com",
                            Name = "Donald Obama",
                            Phone = "78140934",
                            UpdateddAt = new DateTime(2004, 1, 14, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 8, 17, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Mick Windsor@outlook.com",
                            Name = "Mick Windsor",
                            Phone = "77108007",
                            UpdateddAt = new DateTime(2020, 8, 17, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 9, 8, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Barack Middleton@outlook.com",
                            Name = "Barack Middleton",
                            Phone = "44325461",
                            UpdateddAt = new DateTime(2022, 9, 8, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2021, 6, 22, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Mick Winfrey@yahoo.com",
                            Name = "Mick Winfrey",
                            Phone = "89199963",
                            UpdateddAt = new DateTime(2021, 6, 22, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2005, 8, 19, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Elvis Winfrey@hotmail.com",
                            Name = "Elvis Winfrey",
                            Phone = "23698703",
                            UpdateddAt = new DateTime(2005, 8, 19, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2017, 2, 6, 23, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Kate Middleton@yahoo.com",
                            Name = "Kate Middleton",
                            Phone = "76381647",
                            UpdateddAt = new DateTime(2017, 2, 6, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2001, 6, 4, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Oprah Jagger@hotmail.com",
                            Name = "Oprah Jagger",
                            Phone = "76134587",
                            UpdateddAt = new DateTime(2001, 6, 4, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2017, 4, 5, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Donald Hendrix@asl.com",
                            Name = "Donald Hendrix",
                            Phone = "36815159",
                            UpdateddAt = new DateTime(2017, 4, 5, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2016, 7, 18, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Donald Obama@hotmail.com",
                            Name = "Donald Obama",
                            Phone = "44663568",
                            UpdateddAt = new DateTime(2016, 7, 18, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2011, 8, 6, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Elvis Jagger@asl.com",
                            Name = "Elvis Jagger",
                            Phone = "34572850",
                            UpdateddAt = new DateTime(2011, 8, 6, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2018, 7, 24, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Charles Hendrix@asl.com",
                            Name = "Charles Hendrix",
                            Phone = "49637891",
                            UpdateddAt = new DateTime(2018, 7, 24, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2020, 9, 7, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Kate Winslet@gmail.com",
                            Name = "Kate Winslet",
                            Phone = "55029807",
                            UpdateddAt = new DateTime(2020, 9, 7, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2018, 8, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Elvis Winfrey@asl.com",
                            Name = "Elvis Winfrey",
                            Phone = "90178260",
                            UpdateddAt = new DateTime(2018, 8, 31, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2019, 1, 23, 23, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Kate Winfrey@hotmail.com",
                            Name = "Kate Winfrey",
                            Phone = "11834504",
                            UpdateddAt = new DateTime(2019, 1, 23, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2002, 6, 7, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Kate Obama@asl.com",
                            Name = "Kate Obama",
                            Phone = "91524447",
                            UpdateddAt = new DateTime(2002, 6, 7, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2008, 11, 22, 23, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Charles Winfrey@asl.com",
                            Name = "Charles Winfrey",
                            Phone = "73869839",
                            UpdateddAt = new DateTime(2008, 11, 22, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2009, 8, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Jimi Presley@outlook.com",
                            Name = "Jimi Presley",
                            Phone = "21788825",
                            UpdateddAt = new DateTime(2009, 8, 31, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2014, 4, 30, 22, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Elvis Middleton@outlook.com",
                            Name = "Elvis Middleton",
                            Phone = "15368048",
                            UpdateddAt = new DateTime(2014, 4, 30, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2006, 2, 13, 23, 0, 0, 0, DateTimeKind.Utc),
                            Email = "Barack Middleton@asl.com",
                            Name = "Barack Middleton",
                            Phone = "44187057",
                            UpdateddAt = new DateTime(2006, 2, 13, 23, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.DatabaseModels.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("movie_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rating");

                    b.Property<int>("Runtime")
                        .HasColumnType("integer")
                        .HasColumnName("runtime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdateddAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2015, 11, 11, 23, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Comedy Western",
                            Rating = "PPG-13 – Parents Strongly Cautioned",
                            Runtime = 176,
                            Title = "A herd of Microscopic Planets",
                            UpdateddAt = new DateTime(2015, 11, 11, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2009, 10, 3, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Fantasy Historic",
                            Rating = "PPG-13 – Parents Strongly Cautioned",
                            Runtime = 71,
                            Title = "A bunch of Green Buildings",
                            UpdateddAt = new DateTime(2009, 10, 3, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2014, 6, 21, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Sci-Fi Western",
                            Rating = "R – Restricted",
                            Runtime = 224,
                            Title = "A bunch of Large Buildings",
                            UpdateddAt = new DateTime(2014, 6, 21, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2008, 5, 17, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Sci-Fi Sci-Fi",
                            Rating = "PPG-13 – Parents Strongly Cautioned",
                            Runtime = 177,
                            Title = "A herd of Purple Flowers",
                            UpdateddAt = new DateTime(2008, 5, 17, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2012, 9, 12, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Historic Space",
                            Rating = "R – Restricted",
                            Runtime = 71,
                            Title = "Several Purple Buildings",
                            UpdateddAt = new DateTime(2012, 9, 12, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2010, 10, 24, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Fantasy Fantasy",
                            Rating = "R – Restricted",
                            Runtime = 70,
                            Title = "Two Transparent Leopards",
                            UpdateddAt = new DateTime(2010, 10, 24, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2010, 11, 4, 23, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Sci-Fi Sci-Fi",
                            Rating = "NC-17 – Adults Only",
                            Runtime = 155,
                            Title = "A herd of Microscopic Planets",
                            UpdateddAt = new DateTime(2010, 11, 4, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2021, 4, 23, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Cyberpunk Sci-Fi",
                            Rating = "G – General Audiences",
                            Runtime = 115,
                            Title = "A herd of Orange Planets",
                            UpdateddAt = new DateTime(2021, 4, 23, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2000, 1, 25, 23, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Comedy Pirate",
                            Rating = "G – General Audiences",
                            Runtime = 226,
                            Title = "An army of Transparent Houses",
                            UpdateddAt = new DateTime(2000, 1, 25, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2018, 1, 25, 23, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Romance Sci-Fi",
                            Rating = "NC-17 – Adults Only",
                            Runtime = 145,
                            Title = "A herd of Orange Cars",
                            UpdateddAt = new DateTime(2018, 1, 25, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2022, 10, 26, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Comedy Romance",
                            Rating = "R – Restricted",
                            Runtime = 93,
                            Title = "Two Large Buildings",
                            UpdateddAt = new DateTime(2022, 10, 26, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2006, 10, 2, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Dwarf Cyberpunk",
                            Rating = "G – General Audiences",
                            Runtime = 65,
                            Title = "An army of Orange Cars",
                            UpdateddAt = new DateTime(2006, 10, 2, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2023, 8, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Space Space",
                            Rating = "PG – Parental Guidance Suggested",
                            Runtime = 127,
                            Title = "A herd of Green Flowers",
                            UpdateddAt = new DateTime(2023, 8, 31, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2023, 7, 16, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Romance Historic",
                            Rating = "G – General Audiences",
                            Runtime = 121,
                            Title = "Several Transparent Flowers",
                            UpdateddAt = new DateTime(2023, 7, 16, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2018, 8, 15, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Space Comedy",
                            Rating = "PPG-13 – Parents Strongly Cautioned",
                            Runtime = 206,
                            Title = "An army of Orange Planets",
                            UpdateddAt = new DateTime(2018, 8, 15, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2003, 2, 6, 23, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Adventure Sci-Fi",
                            Rating = "PPG-13 – Parents Strongly Cautioned",
                            Runtime = 141,
                            Title = "The Rose Smelling Cars",
                            UpdateddAt = new DateTime(2003, 2, 6, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2016, 9, 30, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Adventure Western",
                            Rating = "PG – Parental Guidance Suggested",
                            Runtime = 134,
                            Title = "Fifteen Purple Leopards",
                            UpdateddAt = new DateTime(2016, 9, 30, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2011, 8, 5, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Fantasy Pirate",
                            Rating = "PPG-13 – Parents Strongly Cautioned",
                            Runtime = 141,
                            Title = "Several Rose Smelling Buildings",
                            UpdateddAt = new DateTime(2011, 8, 5, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2023, 8, 22, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Comedy Pirate",
                            Rating = "G – General Audiences",
                            Runtime = 71,
                            Title = "The Orange Flowers",
                            UpdateddAt = new DateTime(2023, 8, 22, 22, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.DatabaseModels.Screening", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("screening_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer")
                        .HasColumnName("capacity");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("MovieId")
                        .HasColumnType("integer")
                        .HasColumnName("movie_id");

                    b.Property<int>("ScreenNumber")
                        .HasColumnType("integer")
                        .HasColumnName("screen_number");

                    b.Property<DateTime>("StartsAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("starts_at");

                    b.Property<DateTime>("UpdateddAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Screenings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 50,
                            CreatedAt = new DateTime(2023, 2, 4, 23, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 9,
                            ScreenNumber = 5,
                            StartsAt = new DateTime(2023, 2, 4, 23, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2023, 2, 4, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 50,
                            CreatedAt = new DateTime(2005, 4, 9, 22, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 2,
                            ScreenNumber = 5,
                            StartsAt = new DateTime(2005, 4, 9, 22, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2005, 4, 9, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 30,
                            CreatedAt = new DateTime(2009, 10, 10, 22, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 19,
                            ScreenNumber = 3,
                            StartsAt = new DateTime(2009, 10, 10, 22, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2009, 10, 10, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 50,
                            CreatedAt = new DateTime(2009, 3, 10, 23, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 9,
                            ScreenNumber = 5,
                            StartsAt = new DateTime(2009, 3, 10, 23, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2009, 3, 10, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 10,
                            CreatedAt = new DateTime(2018, 11, 17, 23, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 5,
                            ScreenNumber = 1,
                            StartsAt = new DateTime(2018, 11, 17, 23, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2018, 11, 17, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 6,
                            Capacity = 10,
                            CreatedAt = new DateTime(2020, 2, 10, 23, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 13,
                            ScreenNumber = 1,
                            StartsAt = new DateTime(2020, 2, 10, 23, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2020, 2, 10, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7,
                            Capacity = 20,
                            CreatedAt = new DateTime(2001, 10, 7, 22, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 6,
                            ScreenNumber = 2,
                            StartsAt = new DateTime(2001, 10, 7, 22, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2001, 10, 7, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 8,
                            Capacity = 40,
                            CreatedAt = new DateTime(2008, 8, 1, 22, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 11,
                            ScreenNumber = 4,
                            StartsAt = new DateTime(2008, 8, 1, 22, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2008, 8, 1, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 9,
                            Capacity = 50,
                            CreatedAt = new DateTime(2001, 6, 19, 22, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 5,
                            ScreenNumber = 5,
                            StartsAt = new DateTime(2001, 6, 19, 22, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2001, 6, 19, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 10,
                            Capacity = 20,
                            CreatedAt = new DateTime(2023, 3, 19, 23, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 1,
                            ScreenNumber = 2,
                            StartsAt = new DateTime(2023, 3, 19, 23, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2023, 3, 19, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 11,
                            Capacity = 20,
                            CreatedAt = new DateTime(2008, 1, 5, 23, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 11,
                            ScreenNumber = 2,
                            StartsAt = new DateTime(2008, 1, 5, 23, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2008, 1, 5, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 12,
                            Capacity = 20,
                            CreatedAt = new DateTime(2001, 10, 2, 22, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 19,
                            ScreenNumber = 2,
                            StartsAt = new DateTime(2001, 10, 2, 22, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2001, 10, 2, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 13,
                            Capacity = 20,
                            CreatedAt = new DateTime(2006, 11, 26, 23, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 1,
                            ScreenNumber = 2,
                            StartsAt = new DateTime(2006, 11, 26, 23, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2006, 11, 26, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 14,
                            Capacity = 50,
                            CreatedAt = new DateTime(2003, 11, 8, 23, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 5,
                            ScreenNumber = 5,
                            StartsAt = new DateTime(2003, 11, 8, 23, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2003, 11, 8, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 15,
                            Capacity = 30,
                            CreatedAt = new DateTime(2018, 7, 16, 22, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 19,
                            ScreenNumber = 3,
                            StartsAt = new DateTime(2018, 7, 16, 22, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2018, 7, 16, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 16,
                            Capacity = 10,
                            CreatedAt = new DateTime(2002, 11, 26, 23, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 12,
                            ScreenNumber = 1,
                            StartsAt = new DateTime(2002, 11, 26, 23, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2002, 11, 26, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 17,
                            Capacity = 20,
                            CreatedAt = new DateTime(2006, 4, 6, 22, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 15,
                            ScreenNumber = 2,
                            StartsAt = new DateTime(2006, 4, 6, 22, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2006, 4, 6, 22, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 18,
                            Capacity = 50,
                            CreatedAt = new DateTime(2005, 3, 13, 23, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 17,
                            ScreenNumber = 5,
                            StartsAt = new DateTime(2005, 3, 13, 23, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2005, 3, 13, 23, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 19,
                            Capacity = 50,
                            CreatedAt = new DateTime(2012, 7, 22, 22, 0, 0, 0, DateTimeKind.Utc),
                            MovieId = 6,
                            ScreenNumber = 5,
                            StartsAt = new DateTime(2012, 7, 22, 22, 0, 0, 0, DateTimeKind.Utc),
                            UpdateddAt = new DateTime(2012, 7, 22, 22, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.DatabaseModels.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ticket_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("customer_id");

                    b.Property<int>("NumSeats")
                        .HasColumnType("integer")
                        .HasColumnName("num_seats");

                    b.Property<int>("ScreeningId")
                        .HasColumnType("integer")
                        .HasColumnName("screening_id");

                    b.Property<DateTime>("UpdateddAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ScreeningId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("api_cinema_challenge.Models.DatabaseModels.Screening", b =>
                {
                    b.HasOne("api_cinema_challenge.Models.DatabaseModels.Movie", null)
                        .WithMany("Screenings")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api_cinema_challenge.Models.DatabaseModels.Ticket", b =>
                {
                    b.HasOne("api_cinema_challenge.Models.DatabaseModels.Customer", null)
                        .WithMany("Tickets")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_cinema_challenge.Models.DatabaseModels.Screening", null)
                        .WithMany("Tickets")
                        .HasForeignKey("ScreeningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api_cinema_challenge.Models.DatabaseModels.Customer", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("api_cinema_challenge.Models.DatabaseModels.Movie", b =>
                {
                    b.Navigation("Screenings");
                });

            modelBuilder.Entity("api_cinema_challenge.Models.DatabaseModels.Screening", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
